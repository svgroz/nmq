{
    "version": 2,
    "configurePresets": [
        {
            "name": "__basis",
            "displayName": "",
            "description": "",
            "generator": "Unix Makefiles",
            "binaryDir": "${workspaceFolder}/build/",
            "cacheVariables": {
                "CMAKE_BUILD_TYPE": "Debug",
                "BUILD_TESTING": false,
                "CMAKE_EXPORT_COMPILE_COMMANDS": "1"
            },
            "debug": {
                "output": false
            }
        },
        {
            "name": "clang",
            "displayName": "",
            "description": "",
            "inherits": [
                "__basis"
            ],
            "cacheVariables": {
                "CMAKE_C_COMPILER": "clang",
                "CMAKE_CXX_COMPILER": "clang++"
            }
        },
        {
            "name": "gcc",
            "displayName": "",
            "description": "",
            "inherits": [
                "__basis"
            ],
            "cacheVariables": {
                "CMAKE_C_COMPILER": "gcc",
                "CMAKE_CXX_COMPILER": "g++"
            }
        },
        {
            "name": "clang with test",
            "description": "",
            "displayName": "",
            "inherits": [
                "clang"
            ],
            "cacheVariables": {
                "BUILD_TESTING": "1"
            }
        },
        {
            "name": "clang with test + sanitize",
            "description": "",
            "displayName": "",
            "inherits": [
                "clang"
            ],
            "cacheVariables": {
                "BUILD_TESTING": "1",
                "CMAKE_CXX_FLAGS_DEBUG": "-fsanitize=address,undefined -fno-omit-frame-pointer"
            }
        },
        {
            "name": "gcc with test",
            "description": "",
            "displayName": "",
            "inherits": [
                "gcc"
            ],
            "cacheVariables": {
                "BUILD_TESTING": "1"
            }
        }
    ]
}